{"version":3,"sources":["components/LoginForm.jsx","components/MessageFrom.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","app.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","spender","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","App","getItem","projectID","userSecret","renderChatFeed","chatappProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d16bff6.chunk.js","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nconst LoginForm = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const authObject = { 'Project-ID':  \"d964c012-5ec4-46eb-bbed-2c33885503f5\", 'User-Name': username, 'User-Secret': password };\n\n\n\n        try {\n             // username | password => chatengine -> give messages\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject });\n            // works out -> logged in \n\n            localStorage.setItem('username', username);\n            localStorage.setItem('password', password);\n\n            window.location.reload();\n        } catch (error) {\n         setError('Oops, incorrect. Please try again.')\n        }       \n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"form\">\n                <h1 className=\"title\">Chat Application</h1>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n                    \n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n                    <div align=\"center\">\n                        <button type=\"submit\" className=\"button\">\n                            <span>Start Chatting</span>\n                        </button>\n                    </div>\n                    <h2 className=\"error\">{error}</h2>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginForm","import { useState } from 'react';\nimport { sendMessage, isTyping, leaveChat} from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\n\nconst MessageForm = (props) => {\n    const [value, setValue] = useState('');\n    const { chatId, creds } = props;\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        const text = value.trim();\n\n        if (text.length > 0) sendMessage(creds, chatId, { text });\n\n        setValue('');\n\n    }\n    const handleChange = (event) => {\n        setValue(event.target.value);\n        isTyping(props, chatId);\n    }\n\n    const handleUpload = (event) => {\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\n\n    }\n\n    return (\n        <form className=\"message-form\" onSubmit={handleSubmit}>\n            <input \n            className=\"message-input\"\n            placeholder=\"Send a message...\"\n            value={value}\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n            />\n            <label htmlFor=\"upload-button\">\n                <span className=\"image-button\">\n                    <PictureOutlined className=\"picture-icon\"/>\n                </span>\n            </label>\n            <input \n            type=\"file\"\n            multiple={false}\n            id=\"upload-button\"\n            style={{ display: 'none' }}\n            onChange={handleUpload}\n            />\n            <button type=\"submit\" className=\"send-button\">\n                <SendOutlined className=\"send-icon\" />\n            </button>\n        </form>\n    );\n}\n\nexport default MessageForm;","const MyMessage = ({ message }) => {\n    if(message?.attachments?.length > 0) {\n        return (\n            <img \n                src={message.attachments[0].file}\n                alt=\"message-attachment\"\n                className=\"message-image\"\n                style={{ float: 'right' }}\n            />\n        )\n    }\n    return (\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n            {message.text}\n        </div>\n    );\n}\n\nexport default MyMessage;","const TheirMessage= ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.spender.username != message.sender.username\n    // if != isn't right... go to 32:31 in youtube video\n\n    return (\n        <div className=\"message-row\">\n            {isFirstMessageByUser && (\n                <div \n                    className=\"message-avatar\"\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\n                />\n            )}\n            {message?.attachments?.length > 0 \n                    ? (\n                        <img \n                            src={message.attachments[0].file}\n                            alt=\"message-attachment\"\n                            className=\"message-image\"\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n                        />\n                    ) : (\n                        <div className=\"message\" style={{float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n                        {message.text}\n                    </div>\n                    )\n                }\n        </div>\n    );\n}\n\nexport default TheirMessage;","// NEED TO START WHERE THE VIDEO HAS BEEN LEFT OFF (15MIN) TO FIX THE <P> FROM SHOWING UP IN THE MESSAGES\n\n\nimport MessageForm from \"./MessageFrom\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\n\nconst ChatFeed = (props) => {\n    const { chats, activeChat, userName, messages } = props;\n\n    const chat = chats && chats[activeChat];\n\n    const renderReadReceipts = (message, isMyMessage) => {\n        return chat.people.map((person, index) => person.last_read === message.id && (\n            <div \n                key={`read_${index}`}\n                className=\"read-receipt\"\n                style={{\n                    float: isMyMessage ? 'right' : 'left', \n                    backgroundImage: `url(${person?.person?.avatar})`\n                }}\n            \n            />\n        ))\n\n    }\n\n    const renderMessages = () => {\n        const keys = Object.keys(messages);\n\n        return keys.map((key, index) => {\n            const message = messages[key];\n            const lastMessageKey = index === 0 ? null : keys[index - 1]; \n            const isMyMessage = userName === message.sender.username;\n\n            return (\n                <div key={`msg_${index}`} style={{ width: `100% `}}>\n                    <div className=\"message-block\">\n                        {\n                            isMyMessage\n                            ? <MyMessage message={message} />\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\n                        }\n                    </div>\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\n                        {renderReadReceipts(message, isMyMessage)}\n                    </div>\n                </div>\n            );\n        })\n    }\n\n    renderMessages()\n\n    if(!chat) return 'Loading...';\n\n    return (\n        <div className=\"chat-feed\">\n            <div className=\"chat-title-container\">\n                <div className=\"chat-title\">{chat?.title}</div>\n                <div className=\"chat-subtitle\">\n                    {chat.people.map((person)=> ` ${person.person.username}`)}\n                </div>\n            </div>\n            {renderMessages()}\n            <div style={{ height: '100px' }} />\n            <div className=\"message-form-container\">\n                <MessageForm  { ...props} chatId={activeChat}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatFeed;","\n// https://www.youtube.com/watch?v=jcOKU9f86XE Chat Application using React JS\n\n\nimport { ChatEngine } from 'react-chat-engine';\n\nimport LoginForm from './components/LoginForm';\nimport ChatFeed from './components/ChatFeed';\n\n\nimport './app.css';\n\nconst App = () => {\n\n    if(!localStorage.getItem('username')) return <LoginForm />\n\n\n\n    return (\n        <ChatEngine\n           height=\"100vh\"\n           projectID=\"d964c012-5ec4-46eb-bbed-2c33885503f5\"\n           userName={localStorage.getItem('username')}\n           userSecret={localStorage.getItem('password')}\n           renderChatFeed={(chatappProps) => <ChatFeed {...chatappProps} />}\n        />\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}